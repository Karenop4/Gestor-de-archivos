/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package ec.edu.ups.vista;

import ec.edu.ups.controlador.GestionarDirectoriosControlador;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author karen
 */
public class VentanaGestionarDirectorios extends javax.swing.JFrame {
    private GestionarDirectoriosControlador controlador;
    private File[] elementos;
    /**
     * Creates new form VentanaGestionarDirectorios
     */
    public VentanaGestionarDirectorios() {
        initComponents();
        controlador = new GestionarDirectoriosControlador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaArchivos = new javax.swing.JList<>();
        btnMostrarInfo = new javax.swing.JButton();
        txtRuta = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        btnListarDirectorios = new javax.swing.JButton();
        btnListarArchivosOcultos = new javax.swing.JButton();
        btnListarDirectoriosOcultos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        crearMenuItem = new javax.swing.JMenuItem();
        eliminarMenuItem = new javax.swing.JMenuItem();
        renombrarMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        listaArchivos.setFont(new java.awt.Font("Century", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(listaArchivos);

        btnMostrarInfo.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnMostrarInfo.setText("Mostrar Informaci√≥n");
        btnMostrarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarInfoActionPerformed(evt);
            }
        });

        txtRuta.setFont(new java.awt.Font("Century", 0, 13)); // NOI18N

        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Century", 0, 13)); // NOI18N
        txtInfo.setRows(5);
        jScrollPane2.setViewportView(txtInfo);

        btnListarDirectorios.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnListarDirectorios.setText("Listar Directorios");
        btnListarDirectorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirectoriosActionPerformed(evt);
            }
        });

        btnListarArchivosOcultos.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnListarArchivosOcultos.setText("Listar Archivos Ocultos");
        btnListarArchivosOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarArchivosOcultosActionPerformed(evt);
            }
        });

        btnListarDirectoriosOcultos.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnListarDirectoriosOcultos.setText("Listar Directorios Ocultos");
        btnListarDirectoriosOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirectoriosOcultosActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century", 3, 16)); // NOI18N
        jLabel1.setText("ruta:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btnMostrarInfo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnListarDirectorios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnListarArchivosOcultos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnListarDirectoriosOcultos))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btnListarArchivosOcultos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListarDirectorios, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListarDirectoriosOcultos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)))
                .addComponent(btnMostrarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("Gestionar Directorio");

        crearMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        crearMenuItem.setMnemonic('o');
        crearMenuItem.setText("Crear");
        crearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(crearMenuItem);

        eliminarMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        eliminarMenuItem.setMnemonic('s');
        eliminarMenuItem.setText("Eliminar");
        eliminarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(eliminarMenuItem);

        renombrarMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        renombrarMenuItem.setMnemonic('a');
        renombrarMenuItem.setText("Renombrar");
        renombrarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renombrarMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(renombrarMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Salir");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void crearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearMenuItemActionPerformed
        String directorio = JOptionPane.showInputDialog("Ingrese el nombre del directorio");
        String archivo = JOptionPane.showInputDialog("Ingrese el nombre del archivo");
        int i = controlador.crearArchivo(archivo);
        int j = controlador.crearDirectorio(directorio);
        
        if(i==0){
            JOptionPane.showMessageDialog(this, "Archivo no creado");
        }else if(j==0){
            JOptionPane.showMessageDialog(this, "Directorio no creado");
        }
        
        listar();
    }//GEN-LAST:event_crearMenuItemActionPerformed

    private void btnListarDirectoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirectoriosActionPerformed
        listar();
    }//GEN-LAST:event_btnListarDirectoriosActionPerformed

    private void btnListarArchivosOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarArchivosOcultosActionPerformed
        File [] elementos = controlador.listarDirectorios(txtRuta.getText());
        DefaultListModel modelo = new DefaultListModel();
        
        for (File elemento : elementos){
            if(!elemento.isFile() && elemento.isHidden()) {
                modelo.addElement(elemento.getName());
            }
        }
        listaArchivos.setModel(modelo);
    }//GEN-LAST:event_btnListarArchivosOcultosActionPerformed

    private void btnListarDirectoriosOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirectoriosOcultosActionPerformed
        File [] elementos = controlador.listarDirectorios(txtRuta.getText());
        DefaultListModel modelo = new DefaultListModel();
        
        for (File elemento : elementos){
            if(elemento.isDirectory() && elemento.isHidden()) {
                modelo.addElement(elemento.getName());
            }
        }
        listaArchivos.setModel(modelo);
    }//GEN-LAST:event_btnListarDirectoriosOcultosActionPerformed

    private void eliminarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMenuItemActionPerformed
        int index = listaArchivos.getSelectedIndex();
        DefaultListModel modelo = new DefaultListModel();
        modelo = (DefaultListModel) listaArchivos.getModel();
        String nombreArchivoSeleccionado = listaArchivos.getSelectedValue().toString();
        if(nombreArchivoSeleccionado!=null){
            int respuesta = JOptionPane.showConfirmDialog(this, "¬øEst√°s seguro de eliminar?");
                if(respuesta == JOptionPane.YES_OPTION){
                    modelo.removeElementAt(index);
                    controlador.eliminar(nombreArchivoSeleccionado);
                    JOptionPane.showMessageDialog(this, "Archivo/Directorio eliminado");
                }
        }else{
            JOptionPane.showMessageDialog(this, "Archivo/Directorio no seleccionado");
        }
        
    }//GEN-LAST:event_eliminarMenuItemActionPerformed

    private void renombrarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renombrarMenuItemActionPerformed
        
        String nombreArchivoSeleccionado = listaArchivos.getSelectedValue().toString();
        if(nombreArchivoSeleccionado!=null){
            String nuevoNombre = JOptionPane.showInputDialog("Ingrese el nombre del directorio/archivo");
            controlador.renombrar(nombreArchivoSeleccionado, nuevoNombre);
            JOptionPane.showMessageDialog(this, "Archivo/Directorio renombrado");
            listar();
        }else{
            JOptionPane.showMessageDialog(this, "Archivo/Directorio no seleccionado");
        }
        
        
    }//GEN-LAST:event_renombrarMenuItemActionPerformed

    private void btnMostrarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarInfoActionPerformed
        
        String nombreArchivoSeleccionado = "";
        // Obtener el valor seleccionado
        Object selectedValue = listaArchivos.getSelectedValue();

        // Verificar si el valor seleccionado no es nulo
        if (selectedValue != null) {
            // Convertir el valor seleccionado a cadena utilizando toString()
            nombreArchivoSeleccionado = selectedValue.toString();
        }
        
        
        try {
            txtInfo.setText(nombreArchivoSeleccionado+"\n"+controlador.informacionFile(nombreArchivoSeleccionado));
        } catch (IOException ex) {
            Logger.getLogger(VentanaGestionarDirectorios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMostrarInfoActionPerformed

    
    public void listar(){
        File [] elementos = controlador.listarDirectorios(txtRuta.getText());
        
        // Verificar si elementos es null
        if (elementos == null) {
            return;
        }
        
        DefaultListModel modelo = new DefaultListModel();
        
        int cont = 0;
        for (File elemento : elementos){
            if((elemento.isFile()||elemento.isDirectory())&& !elemento.isHidden()) {
                modelo.addElement(elemento.getName());
                cont++;
            }
        }
        listaArchivos.setModel(modelo);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarDirectorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarDirectorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarDirectorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarDirectorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaGestionarDirectorios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarArchivosOcultos;
    private javax.swing.JButton btnListarDirectorios;
    private javax.swing.JButton btnListarDirectoriosOcultos;
    private javax.swing.JButton btnMostrarInfo;
    private javax.swing.JMenuItem crearMenuItem;
    private javax.swing.JMenuItem eliminarMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaArchivos;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem renombrarMenuItem;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables

}
